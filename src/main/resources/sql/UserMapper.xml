<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mapmory.services.user.dao.UserDao">
	
	<resultMap id="userSelectMap" type="user">
	    <result property="userId" column="user_id" jdbcType="VARCHAR"/>
	    <result property="userPassword" column="user_password" jdbcType="VARCHAR"/>
	    <result property="role" column="role" jdbcType="TINYINT"/>
	    <result property="userName" column="user_name" jdbcType="VARCHAR"/>
	    <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
	    <result property="birthday" column="birthday" jdbcType="DATE"/>
	    <result property="email" column="email" jdbcType="VARCHAR"/>
	    <result property="phoneNumber" column="phone_number" jdbcType="VARCHAR"/>
	    <result property="sex" column="sex" jdbcType="INTEGER"/>
	    <result property="regDate" column="reg_date" jdbcType="TIMESTAMP"/>
	    <result property="updatePasswordDate" column="update_password_date" jdbcType="TIMESTAMP"/>
	    <result property="setSecondaryAuth" column="set_secondary_auth" jdbcType="TINYINT"/>
	    <result property="profileImageName" column="profile_image_name" jdbcType="VARCHAR"/>
	    <result property="introduction" column="introduction" jdbcType="VARCHAR"/>
	    <result property="hideProfile" column="hide_profile" jdbcType="TINYINT"/>
	    <result property="leaveAccountDate" column="leave_account_date" jdbcType="TIMESTAMP"/>
	    <result property="endSuspensionDate" column="end_suspension_date" jdbcType="DATE"/>
	</resultMap>
	
	<resultMap id="socialLoginInfoSelectMap" type="socialLoginInfo">
	    <result property="socialLoginInfoNo" column="social_login_info_no" jdbcType="INTEGER"/>
	    <result property="userId" column="user_id" jdbcType="VARCHAR"/>
	    <result property="socialLoginInfoType" column="social_login_info_type" jdbcType="INTEGER"/>
	    <result property="socialId" column="social_id" jdbcType="VARCHAR"/>
	    <result property="linkRegDate" column="link_reg_date" jdbcType="TIMESTAMP"/>
	</resultMap>
	 
	 <resultMap id="selectFollowMap" type="followMap">
	 	<result property="userId" column="user_id" jdbcType="VARCHAR"/>
	 	<result property="userName" column="user_name" jdbcType="VARCHAR"/>
	 	<result property="nickname" column="nickname" jdbcType="VARCHAR"/>
	 	<result property="profileImageName" column="profile_image_name" jdbcType="VARCHAR"/>
	 	<result property="hideProfile" column="hide_profile" jdbcType="TINYINT"/>
	 	<result property="isSubscribed" column="is_subscribed" jdbcType="TINYINT"/>
	 	<result property="isFollow" column="is_follow" jdbcType="TINYINT"/>
	 </resultMap>
	 
	 <!-- <resultMap id="selectSuspensionLogMap" type="map">  -->
	 <resultMap id="selectSuspensionLogMap" type="com.mapmory.services.user.domain.SuspensionLogList">
	 	<id property="userId" column="user_id"/>
	 	<collection property="suspensionDetailList" ofType="com.mapmory.services.user.domain.SuspensionDetail" javaType="list">
	 		<id property="logNo" column="log_no" />
	 		<result property="startSuspensionDate" column="start_suspension_date"/>
	 		<result property="reason" column="reason"/>
	 	</collection>
	 </resultMap>
	 
	 <resultMap id="selectLoginDailyMap" type="com.mapmory.services.user.domain.LoginDailyLog">
	 	<result property="hour" column="hour" />
	 	<result property="count" column="count" />
	 </resultMap>
	 
	 <resultMap id="selectLoginMonthlyMap" type="com.mapmory.services.user.domain.LoginMonthlyLog">
	 	<result property="day" column="day" />
	 	<result property="count" column="count" />
	 </resultMap>

	<insert id="insertUser" parameterType="user">
		INSERT INTO
		users (user_id, user_password, user_name, nickname, birthday, email, phone_number, sex)
		VALUES (#{userId}, #{userPassword}, #{userName}, #{nickname}, #{birthday}, #{email}, #{phoneNumber}, #{sex})
	</insert>
	
	<insert id="insertSocialLoginLink" parameterType="socialLoginInfo">
		INSERT INTO
		social_login_info (USER_ID, SOCIAL_LOGIN_INFO_TYPE, SOCIAL_ID)
		VALUES (#{userId}, #{socialLoginInfoType}, #{socialId})
	</insert>
	
	<insert id="insertFollow" parameterType="followBlock">
		INSERT INTO
		follow_block (user_id, target_id, fb_type)
		VALUES (#{userId}, #{targetId}, 0)
	</insert>
	
	<insert id="insertSuspendLog" parameterType="suspensionLog">
		INSERT INTO
		suspension_login_log (user_id, start_suspension_date, reason, log_type)
		VALUES (#{userId}, #{suspensionDetail.startSuspensionDate}, #{suspensionDetail.reason}, 1)
	</insert>
	

	<insert id="insertLoginLog" parameterType="string">
		INSERT INTO
		suspension_login_log (user_id, login_date, log_type)
		VALUES (#{value}, NOW(), 0)
	</insert>

	
	<select id="selectUser" parameterType="string" resultMap="userSelectMap">
		SELECT
		*
		FROM users
		<where> 
		 	<if test="userId != null">user_id = #{userId}</if>
		 	<if test="userName != null and email != null">user_name = #{userName} AND email = #{email}</if>
		 	<if test="userName == null and email != null">AND email = #{email}</if>
		</where>
	</select>
	
	<select id="selectUserList" parameterType="search" resultMap="userSelectMap">
		SELECT *
		FROM (
			SELECT 
				origin.*, 
				(@rownum := @rownum + 1) AS n
			FROM (
				SELECT
				*
				FROM users
				<if test="searchCondition == 0">WHERE user_id LIKE CONCAT('%', #{searchKeyword}, '%')</if>
				<if test="searchCondition == 1">WHERE nickname LIKE CONCAT('%', #{searchKeyword}, '%')</if>
				ORDER BY reg_date DESC
				) origin,
				(SELECT @rownum :=0) AS r
			ORDER BY n DESC
		) temp
		WHERE temp.n BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="getUserListTotalCount" parameterType="search" resultType="integer">
		SELECT COUNT(*)
		FROM (
			SELECT 
				(@rownum := @rownum + 1) AS n,
				origin.*
			FROM (
				SELECT
				*
				FROM users 
			<if test="searchCondition == 0">WHERE user_id LIKE CONCAT('%', #{searchKeyword}, '%')</if>
			<if test="searchCondition == 1">WHERE nickname LIKE CONCAT('%', #{searchKeyword}, '%')</if>
			ORDER BY reg_date DESC
			) origin,
			(SELECT @rownum :=0) AS r
			ORDER BY n DESC
		) temp
		<!-- WHERE temp.n BETWEEN #{startRowNum} AND #{endRowNum}  -->
	</select>
	
	<select id="selectSocialIdList" parameterType="string" resultMap="socialLoginInfoSelectMap">
		SELECT
		*
		FROM social_login_info
		WHERE user_id = #{value}
	</select>
	
	<select id="selectFollowList" parameterType="com.mapmory.services.user.domain.FollowSearch" resultMap="selectFollowMap">
	SELECT
		<if test="selectFollow == 0">
		  fb.target_id AS user_id,
	    </if>
	    <if test="selectFollow == 1">
		  fb.user_id,
	    </if>
		  u.user_name,
		  u.nickname,
		  u.profile_image_name,
		  u.hide_profile,
		  IF(NOW() BETWEEN s.subscription_start_date AND s.subscription_end_date, 1, 0) AS is_subscribed,
		  CASE
		    WHEN fb2.user_id IS NULL THEN 0
		    ELSE 1
		  END AS is_follow
		FROM follow_block fb
		<if test="selectFollow == 0">
		LEFT JOIN users u ON fb.target_id = u.user_id
		LEFT JOIN subscription s ON fb.target_id = s.user_id
		LEFT JOIN follow_block fb2 ON fb2.target_id = fb.target_id AND fb2.user_id = #{myUserId}
			<!-- AND fb2.fb_type != 1  -->
		</if>
		<if test="selectFollow == 1">
		LEFT JOIN users u ON fb.user_id = u.user_id
		LEFT JOIN subscription s ON fb.user_id = s.user_id
		LEFT JOIN follow_block fb2 ON fb2.user_id = fb.user_id AND fb2.target_id = #{myUserId}
			<!-- AND fb.fb_type != 1  --> 
		</if>
		AND fb2.fb_type=0
		WHERE
		  <if test="selectFollow == 0">
		  fb.user_id = #{userId}
		  </if>
		  <if test="selectFollow == 1">
		  fb.target_id = #{userId}
		  </if>
  		  AND fb.fb_type = 0
		  <if test="searchKeyword != null">AND (u.nickname LIKE CONCAT('%', #{searchKeyword}, '%') OR u.user_name LIKE CONCAT('%', #{searchKeyword}, '%') )</if>
	    <if test="limit != 0 and currentPage != 0"> 
		ORDER BY fb.FB_NO DESC
		LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>
	
	<select id="getFollowListTotalCount" parameterType="com.mapmory.services.user.domain.FollowSearch" resultType="integer">
		SELECT
		COUNT(*) 
		FROM follow_block fb
			<if test="selectFollow == 0">JOIN users u ON fb.target_id = u.user_id</if>
			<if test="selectFollow == 1">JOIN users u ON fb.user_id = u.user_id</if>
		WHERE
			  <if test="selectFollow == 0">
			  fb.user_id = #{userId}
			  </if>
			  <if test="selectFollow == 1">
			  fb.target_id = #{userId}
			  </if>
			AND fb_type=0
			<if test="searchKeyword != null">AND (u.nickname LIKE CONCAT('%', #{searchKeyword:VARCHAR}, '%') OR u.user_name LIKE CONCAT('%', #{searchKeyword:VARCHAR}, '%') )</if>
		ORDER BY fb.FB_NO DESC
		<if test="limit != 0 and currentPage != 0"> 
		LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>
	
	<!-- 
	<select id="selectFollowerList" parameterType="search" resultMap="selectFollowMap">
		SELECT
		fb.target_id as user_id, u.user_name, u.nickname, u.profile_image_name, u.hide_profile 
		FROM follow_block fb
			JOIN users u ON fb.user_id = u.user_id
		WHERE
			fb.target_id = #{userId}
			AND fb_type=0
			<if test="searchKeyword != null">AND (u.nickname LIKE CONCAT('%', #{searchKeyword:VARCHAR}, '%') OR u.user_name LIKE CONCAT('%', #{searchKeyword:VARCHAR}, '%') )</if>
		ORDER BY fb.FB_NO DESC
		LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<select id="getFollowerListTotalCount" parameterType="search" resultType="integer">
		SELECT
		COUNT(*) 
		FROM follow_block fb
			JOIN users u ON fb.user_id = u.user_id
		WHERE
			fb.target_id = #{userId}
			AND fb_type=0
			<if test="searchKeyword != null">AND (u.nickname LIKE CONCAT('%', #{searchKeyword}, '%') OR u.user_name LIKE CONCAT('%', #{searchKeyword}, '%') )</if>
		<if test="limit != 0 and currentPage != 0"> 
		ORDER BY fb.FB_NO DESC 
		LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>
	 -->
	 
	<select id="isFollow" parameterType="com.mapmory.services.user.domain.FollowBlock" resultType="integer">
		SELECT
		COUNT(*)
		FROM follow_block
		WHERE
			user_id = #{userId}
			AND target_id=#{targetId}
			AND fb_type=0
	</select>
	
	<select id="selectSuspensionList" parameterType="search" resultMap="selectSuspensionLogMap">
		
		SELECT
		u.user_id, s.log_no, s.start_suspension_date, s.reason
		FROM users u
			JOIN suspension_login_log s ON u.user_id = s.user_id
		WHERE  
			<if test="searchCondition == 0">s.user_id LIKE CONCAT('%', #{userId}, '%')</if>
			<if test="searchCondition == 1"> s.user_id = #{userId} </if>
			AND s.log_type=1
		<if test="searchCondition == 0">ORDER BY u.user_id</if> 
		<!-- wrapper type이 아니므로. -->
		<if test="limit != 0 and currentPage != 0"> LIMIT #{limit} OFFSET #{offset} </if>
	</select>
	
	<select id="selectUserLoginDailyList" parameterType="search" resultMap="selectLoginDailyMap">
		SELECT
		    SUBSTRING(login_date, 12, 2) AS hour,
		    COUNT(*) AS count
		FROM suspension_login_log
		WHERE DATE(login_date) = #{selectLoginDate}
		GROUP BY SUBSTRING(login_date, 12, 2)
		ORDER BY hour
	</select>
	
	<select id="selectUserLoginMonthlyList" parameterType="search" resultMap="selectLoginMonthlyMap">
		SELECT
		  EXTRACT(DAY FROM login_date) AS day,
		  COUNT(*) AS count
		FROM suspension_login_log
		WHERE login_date IS NOT NULL
			AND EXTRACT(YEAR FROM login_date) = #{year} AND EXTRACT(MONTH FROM login_date)  = #{month}
		GROUP BY day
		ORDER BY day;
	</select>
	
	<select id="selectPassword" parameterType="string" resultType="string">
		SELECT
		user_password
		FROM users
		WHERE user_id = #{value}
	</select>
	
	<select id="selectUserIdBySocialId" parameterType="String" resultType="string">
        SELECT user_id
        FROM social_login_info
        WHERE social_id = #{socialId}
    </select>
	
	
	<select id="checkDuplication" parameterType="user" resultType="integer">
		SELECT
		COUNT(*)
		FROM users
		<where>
			<if test="userId != null">user_id = #{userId}</if>
			<if test="nickname != null">nickname = #{nickname}</if>
		</where>
	</select>
	
	<update id="updateUser" parameterType="user">
	    UPDATE users
	    <set>
	        <if test="userPassword != null">user_password=#{userPassword}, </if>
	        <if test="userName != null">user_name=#{userName}, </if>
	        <if test="nickname != null">nickname=#{nickname}, </if>
	        <if test="birthday != null">birthday=#{birthday}, </if>
	        <if test="email != null">email=#{email}, </if>
	        <if test="phoneNumber != null">phone_number=#{phoneNumber}, </if>
	        <if test="sex != null">sex=#{sex}, </if>
	        <if test="updatePasswordDate != null">update_password_date=#{updatePasswordDate}, </if>
	        <if test="setSecondaryAuth != null">set_secondary_auth=#{setSecondaryAuth}, </if>
	        <if test="profileImageName != null">profile_image_name=#{profileImageName}, </if>
	        <if test="introduction != null">introduction=#{introduction}, </if>
	        <if test="hideProfile != null">hide_profile=#{hideProfile}, </if>
	        <if test="leaveAccountDate != null">leave_account_date = #{leaveAccountDate},</if>
	        <if test="endSuspensionDate != null">end_suspension_date=#{endSuspensionDate}, </if>
	    </set>
	    WHERE user_id=#{userId}
	</update>
	
	<update id="updateRecoverAccount" parameterType="string">
		UPDATE users
		SET leave_account_date = null
		WHERE user_id = #{value}
	</update>
	
	<update id="updateHideProfile" parameterType="string">
		UPDATE users
		SET hide_profile = hide_profile ^ 1
		WHERE user_id = #{userId}
	</update>
	
	<update id="updateSecondaryAuth" parameterType="string">
		UPDATE users
		SET set_secondary_auth = set_secondary_auth ^ 1
		WHERE user_id = #{userId}
	</update>
	
	<update id="updatePassword" parameterType="com.mapmory.services.user.domain.Login">
	
		UPDATE users
		SET user_password = #{userPassword}
		WHERE user_id=#{userId}
	</update>
	
	<update id="updateFollowToBlock" parameterType="followBlock" >
	
		UPDATE follow_block
		SET fb_type = 1
		WHERE user_id=#{userId} AND target_id=#{targetId} 
	
	</update>
	
	<delete id="deleteFollow" parameterType="followBlock">
		DELETE FROM follow_block
		WHERE user_id=#{userId} AND target_id=#{targetId}
	</delete>
	
	<delete id="deleteSuspendUser" parameterType="integer">
		DELETE FROM suspension_login_log
		WHERE log_no = #{logNo}
	</delete>
</mapper>